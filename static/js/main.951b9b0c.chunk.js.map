{"version":3,"sources":["cylForce.js","cord.js","leakRate.js","cp.js","index.js"],"names":["cylForce","props","onHandleClick","e","nm","target","name","vl","value","setState","state","dia","pr","inDia","push","pull","this","Math","PI","toFixed","type","style","width","onChange","React","Component","Cord","newPos","makeArray","clearAll","console","log","elements","document","getElementsByClassName","i","length","1","2","3","4","5","6","7","8","9","array","list","getElementsByName","Object","keys","a","b","includes","totalLength","calculateStepLength","className","onClick","LeakRate","calculateLeak","refPress","getElementById","testPress","temp","hePurity","leakRateMass","err","leakRateVol","parseInt","heLam","heMol","parseFloat","toExponential","totalLeak","id","color","Cp","upper","lower","input","NaN","data","max","min","range","avg","reduce","stDev","cp","cpk","sumOfSq","abs","ReactDOM","render"],"mappings":"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","file":"static/js/main.951b9b0c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass cylForce extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dia: null,\r\n      pr: null,\r\n      inDia: null,\r\n    };\r\n  }\r\n\r\n  // To commonize all event handling, we're getting e.target's attribute i.e. name & value\r\n  // where event.target's name has to be same as state's key.\r\n  onHandleClick = (e) => {\r\n    let nm = e.target.name;\r\n    let vl = e.target.value;\r\n    this.setState({ [nm]: vl });\r\n  };\r\n\r\n  render() {\r\n    let dia = this.state.dia;\r\n    let pr = this.state.pr;\r\n    let inDia = this.state.inDia;\r\n    let push;\r\n    let pull;\r\n    if (dia != null && (pr != null) & (inDia != null)) {\r\n      push = (pr * Math.PI * (dia / 20) ** 2).toFixed(2);\r\n      pull = (pr * Math.PI * ((dia / 20) ** 2 - (inDia / 20) ** 2)).toFixed(2);\r\n    } else {\r\n      push = \"\";\r\n      pull = \"\";\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>Cylinder Force Calculation.</h3>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <label>Enter Cylinder Dia (mm): </label>\r\n              </td>\r\n              <td>\r\n                {\" \"}\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"dia\"\r\n                  style={{ width: \"50px\" }}\r\n                  onChange={this.onHandleClick}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>Enter Shaft Dia (mm): </label>{\" \"}\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"inDia\"\r\n                  style={{ width: \"50px\" }}\r\n                  onChange={this.onHandleClick}\r\n                />{\" \"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>Enter Pressure (bar): </label>{\" \"}\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"pr\"\r\n                  style={{ width: \"50px\" }}\r\n                  onChange={this.onHandleClick}\r\n                />{\" \"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <br></br>\r\n        <label>Cylinder Push (kgf): </label>\r\n        <label>{push}</label>\r\n        <br />\r\n        <label>Cylinder Pull (kgf): </label>\r\n        <label>{pull}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default cylForce;\r\n","import React from \"react\";\r\n\r\nclass Cord extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      1: [\"\", \"\", \"\"],\r\n      2: [\"\", \"\", \"\"],\r\n      3: [\"\", \"\", \"\"],\r\n      4: [\"\", \"\", \"\"],\r\n      5: [\"\", \"\", \"\"],\r\n      6: [\"\", \"\", \"\"],\r\n      7: [\"\", \"\", \"\"],\r\n      8: [\"\", \"\", \"\"],\r\n      9: [\"\", \"\", \"\"],\r\n    };\r\n  }\r\n\r\n  onHandleClick = (e) => {\r\n    let name = e.target.name;\r\n    // console.log('Name returned by input: '+name);\r\n    let newPos = this.makeArray(name);\r\n    // console.log('Array returned: '+newPos);\r\n    this.setState({ [name]: newPos });\r\n  };\r\n\r\n  //used in onHandleClick\r\n  makeArray(name) {\r\n    let array = [];\r\n    let list = document.getElementsByName(name);\r\n    // console.log(list);\r\n    // console.log(Object.keys(list).length);\r\n    // console.log(list[0].valueAsNumber);\r\n    for (let i = 0; i < Object.keys(list).length; i++) {\r\n      let a = list[i].value;\r\n      // console.log(a);\r\n      array.push(a);\r\n    }\r\n    // console.log('Value of changed xyz: '+array);\r\n    return array;\r\n  }\r\n\r\n  //Used in render\r\n  calculateStepLength(a, b) {\r\n    if (a.includes(\"\") || b.includes(\"\")) {\r\n      return 0;\r\n    }\r\n    let stplngth =\r\n      ((b[0] - a[0]) ** 2 + (b[1] - a[1]) ** 2 + (b[2] - a[2]) ** 2) ** 0.5;\r\n    return stplngth;\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    // console.log(Object.keys(this.state).length); //no. of states in this.state\r\n    let totalLength = 0;\r\n\r\n    for (let i = 1; i < Object.keys(this.state).length; i++) {\r\n      let a = this.state[i];\r\n      let b = this.state[i + 1];\r\n      // console.log(a);\r\n      // console.log(b);\r\n      let stepLength = this.calculateStepLength(a, b);\r\n      // console.log('Step: '+stepLength);\r\n      totalLength += stepLength;\r\n      // console.log('Total: '+totalLength);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>Pipe Length Calculation.</h3>\r\n        <div>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th></th>\r\n                <th>x</th>\r\n                <th>y</th>\r\n                <th>z</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Position 1</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"1\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"1\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"1\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Position 2</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"2\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"2\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"2\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Position 3</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"3\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"3\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"3\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Position 4</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"4\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"4\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"4\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Position 5</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"5\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"5\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"5\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Position 6</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"6\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"6\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"6\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Position 7</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"7\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"7\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"7\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Position 8</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"8\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"8\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"8\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Position 9</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"9\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"9\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"data\"\r\n                    name=\"9\"\r\n                    style={{ width: \"50px\" }}\r\n                    onChange={this.onHandleClick}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <label>Total Length: </label>\r\n          <label>{totalLength.toFixed(2)}</label>\r\n        </div>\r\n        <br/>\r\n        <div>\r\n          <button type=\"button\" onClick={this.clearAll}>\r\n            Clear all fields\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } //render ends here.\r\n\r\n  clearAll = (e) => {\r\n    console.log(\"Button Clicked\");\r\n\r\n    //clear all fields\r\n    var elements = [];\r\n    elements = document.getElementsByClassName(\"data\");\r\n    for (let i = 0; i < elements.length; i++) {\r\n      elements[i].value = \"\";\r\n    }\r\n\r\n    //set state back to original state\r\n    this.setState({\r\n      1: [\"\", \"\", \"\"],\r\n      2: [\"\", \"\", \"\"],\r\n      3: [\"\", \"\", \"\"],\r\n      4: [\"\", \"\", \"\"],\r\n      5: [\"\", \"\", \"\"],\r\n      6: [\"\", \"\", \"\"],\r\n      7: [\"\", \"\", \"\"],\r\n      8: [\"\", \"\", \"\"],\r\n      9: [\"\", \"\", \"\"],\r\n    });\r\n  }; // clearAll ends here.\r\n} //class Cord ends here.\r\n\r\nexport default Cord;","import React from \"react\";\r\n\r\nclass LeakRate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      err: \"\",\r\n      heLam: \"\",\r\n      dia: \"\",\r\n      heMol: \"\",\r\n    };\r\n  }\r\n\r\n  calculateLeak = (e) => {\r\n    // console.log(\"button clicked\");\r\n    let refPress = document.getElementById(\"refPress\").value;\r\n    let testPress = document.getElementById(\"testPress\").value;\r\n    let temp = document.getElementById(\"temp\").value;\r\n    let hePurity = document.getElementById(\"hePurity\").value/100;\r\n    let leakRateMass = document.getElementById(\"leakRate\").value;\r\n    // console.log(hePurity);\r\n    // console.log(parseInt(testPress)+1);\r\n    // console.log(refPress+\"-\"+testPress+\"-\"+temp+\"-\"+hePurity+\"-\"+leakRateMass);\r\n\r\n    //check if any field is blank\r\n    if(refPress===\"\"||testPress===\"\"||temp===\"\"||hePurity===\"\"||leakRateMass===\"\"){\r\n        this.setState({\r\n            err:\"    Error: Please fill all data first.\"\r\n        });\r\n        return;\r\n    }\r\n\r\n    //check if hePurity is between 0 and 100\r\n    if(hePurity<0.01 || hePurity>1){\r\n        this.setState({\r\n            err:\"    Error: He Purity must be between 1 & 100\"\r\n        });\r\n        return;\r\n    }\r\n\r\n    let leakRateVol =\r\n      (((parseInt(leakRateMass) / 31500000) * 22400) / 102) *\r\n      (1 + parseInt(temp) / 273);\r\n    let heLam =\r\n      (((leakRateVol * hePurity * 12.1) / 18.76) *\r\n        ((parseInt(testPress) + 1) ** 2 - 1)) /\r\n      ((parseInt(refPress) + 1) ** 2 - 1);\r\n    let dia =\r\n      ((256 * 12.1 * 0.00000000001 * 0.3 * leakRateVol) /\r\n        (3.142 * ((parseInt(refPress) + 1) ** 2 - 1))) **\r\n      0.25;\r\n    let heMol =\r\n      (((2 * 3.142 * (parseInt(temp) + 273) * 83200000) / 4) ** 0.5 *\r\n        (dia ** 3 / 0.3) *\r\n        ((parseInt(testPress) + 1) * hePurity)) /\r\n      6;\r\n    // console.log(leakRateVol + \"-\" + heLam + \"-\" + dia + \"-\" + heMol);\r\n\r\n    this.setState({\r\n      err: \"\",\r\n      heLam: parseFloat(heLam).toExponential(3),\r\n      dia: parseFloat(dia).toExponential(3),\r\n      heMol: parseFloat(heMol).toExponential(3),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let heLam = this.state.heLam;\r\n    let dia = this.state.dia;\r\n    let heMol = this.state.heMol;\r\n    let totalLeak;\r\n    if (heLam!==\"\" || heMol!==\"\"){\r\n        totalLeak = (parseFloat(heLam)+parseFloat(heMol)).toExponential(3);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h3>Leak Rate Conversion</h3>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Enter Working Pressure (bar)</td>\r\n              <td>\r\n                <input type=\"number\" style={{ width: \"50px\" }} id=\"refPress\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Enter Test Pressure (bar)</td>\r\n              <td>\r\n                <input type=\"number\" style={{ width: \"50px\" }} id=\"testPress\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Enter Test Temperature (℃)</td>\r\n              <td>\r\n                <input type=\"number\" style={{ width: \"50px\" }} id=\"temp\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Enter He Purity (0-100%)</td>\r\n              <td>\r\n                <input type=\"number\" style={{ width: \"50px\" }} id=\"hePurity\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Allowed R134a Leak (gm/yr)</td>\r\n              <td>\r\n                <input type=\"number\" style={{ width: \"50px\" }} id=\"leakRate\" />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button type=\"button\" onClick={this.calculateLeak}>\r\n          Calculate\r\n        </button>\r\n        <label style={{color:\"red\"}}>{this.state.err}</label>\r\n        <br/><br/>\r\n        <label>He Laminar Flow (mbar l/s):</label>\r\n        <label>{heLam}</label>\r\n        <br></br>\r\n        <label>Diameter of Leak (cm):</label>\r\n        <label>{dia}</label>\r\n        <br></br>\r\n        <label>He Molecular Flow (mbar l/s):</label>\r\n        <label>{heMol}</label>\r\n        <br></br>\r\n        <label>\r\n          <strong>Total He Leak Rate</strong> (mbar l/s):\r\n        </label>\r\n        <label>{totalLeak}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeakRate;","import React from \"react\";\r\n\r\nclass Cp extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state=({\r\n          err: \"\",\r\n          upper: \"\",\r\n          lower: \"\",\r\n          data: [\"\",\"\"],\r\n      })\r\n  }\r\n\r\n  onClick = (e) =>{\r\n\r\n    let upper = parseFloat(document.getElementById(\"upper\").value);\r\n    let lower = parseFloat(document.getElementById(\"lower\").value);\r\n\r\n    let input = document.getElementsByName(\"data\");\r\n    let array = [];\r\n    for( let i=0; i<input.length; i++){\r\n        array[i]=parseFloat(input[i].value);\r\n    }\r\n    //with blank data, array returns NaN\r\n    if(upper===\"\" || lower===\"\" || array.includes(NaN)){\r\n      this.setState({\r\n        err: \"Error: Please fill all data first.\"\r\n      });\r\n      return;\r\n    }\r\n    //Check if Upper & Lower Limit are inter-changed.\r\n    if(lower>=upper){\r\n      this.setState({\r\n        err: \"Error: Lower Limit should be less than Upper Limit.\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n        err: \"\",\r\n        upper: upper,\r\n        lower: lower,\r\n        data: array\r\n      })\r\n  } //onClick ends here...\r\n\r\n  render() {\r\n    //getting data from state\r\n    let upper = this.state.upper;\r\n    let lower = this.state.lower;\r\n    let data = this.state.data;\r\n    //perform calculations\r\n    let max = Math.max(...data);\r\n    let min = Math.min(...data);\r\n    let range = max-min;\r\n    let avg = data.reduce((a,b)=>a+b,0)/data.length;\r\n    let stDev = 0;\r\n    let cp = 0;\r\n    let cpk = 0;\r\n    if(!data.includes(\"\")){\r\n       let sumOfSq = 0;\r\n        for (let i=0;i<data.length;i++){\r\n            sumOfSq += (Math.abs(data[i]-avg))**2\r\n        }\r\n        stDev = (sumOfSq/(data.length-1))**0.5;\r\n        cp = (upper-lower)/(6*stDev);\r\n        cpk = Math.min((upper-avg),(avg-lower))/(3*stDev);   \r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <h3>Process Capability</h3>\r\n        <label>Upper Limit:</label>\r\n        <input type=\"number\" id=\"upper\" style={{width:\"80px\"}} />\r\n        <br />\r\n        <label>Lower Limit:</label>\r\n        <input type=\"number\" id=\"lower\" style={{width:\"80px\"}} />\r\n        <br /><br/>\r\n        <label>Enter data for n=30 samples</label>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\" name=\"data\" style={{ width: \"50px\" }} />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button type=\"button\" onClick={this.onClick}> Calculate</button>\r\n        <label style={{color:\"red\"}}>{this.state.err}</label><br/><br/>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td>Max:</td>\r\n                    <td><label>{max}</label></td>\r\n                    <td>  |  </td>\r\n                    <td>Min:</td>\r\n                    <td><label>{min}</label></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Range:</td>\r\n                    <td><label>{range}</label></td>\r\n                    <td>  |  </td>\r\n                    <td>Std Dev:</td>\r\n                    <td><label>{stDev.toFixed(2)}</label></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Cp:</td>\r\n                    <td><label>{cp.toFixed(2)}</label></td>\r\n                    <td>  |  </td>\r\n                    <td>Cpk:</td>\r\n                    <td><label>{cpk.toFixed(2)}</label></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  } //render end here...\r\n}\r\n\r\nexport default Cp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport CylForce from './cylForce';\r\nimport Cord from './cord';\r\nimport LeakRate from './leakRate';\r\nimport Cp from './cp';\r\n\r\nReactDOM.render(\r\n  <div >\r\n    <h2>Tool-Box</h2>\r\n    <div className=\"flex-container\" > \r\n      <div>\r\n        <CylForce />\r\n      </div>\r\n      <div>\r\n        <LeakRate />\r\n      </div>\r\n    </div>\r\n    <div className=\"flex-container\">  \r\n       <div>\r\n      <Cord />\r\n    </div>\r\n    <div>\r\n      <Cp/>\r\n    </div> \r\n    </div>       \r\n  </div>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}